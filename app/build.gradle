apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jakewharton.butterknife'

def keystoreFilepath = ''
def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyfile = file('s.keystore.temp')

Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('local.properties').newDataInputStream())
keystoreFilepath = properties.getProperty("keystore.path")


if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyfile = file(keystoreFilepath)
}


android {
    signingConfigs {
        debugconfig {
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
            storeFile keyfile
            storePassword keystorePSW
        }
    }
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOL_SVERSION as String
    defaultConfig {
        applicationId "com.aliyun.sls"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME as String
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled true
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
        //关闭预编译
        preDexLibraries = false
    }
    //打包忽略掉第三方jar相同的文件
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    buildTypes {
        release {
//            applicationId "com.aliyun.sls"
            manifestPlaceholders = [gaode_key: properties.getProperty("gaodekey.release")]
//            applicationIdSuffix "com.aliyun.sls"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            buildConfigField "boolean", "LOG_DEBUG", "false"
//            buildConfigField "String", "SERVER_HOST", "\"100.100.100.10/\""
//            resValue("string", "avis", "安飞士租车")
//            resValue("string", "appid", "com.aliyun.sls")

//            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher"]

        }
        debug {
//            applicationId "com.aliyun.debug"
            manifestPlaceholders = [gaode_key: properties.getProperty("gaodekey.debug")]
            minifyEnabled false
//            buildConfigField "boolean", "LOG_DEBUG", "false"
//            buildConfigField "String", "SERVER_HOST", "\"200.200.200.50/\""
            resValue("string", "avis", "测试安飞士租车")
//            resValue("string", "appid", "com.aliyun.avis")
//            manifestPlaceholders = [app_icon: "@mipmap/relese_icon"]
            //签名文件存在，则签名
//            if (keyfile.exists()) {
                signingConfig signingConfigs.debugconfig
//            }else {
//            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
    productFlavors {
        AVIS_OW_1_AND330 {
            // gradle 3.0.0 以上需要有这个
            // dimension "app"

            // 每个环境包名不同
//            applicationId "com.lyl.dev"
            // 动态添加 string.xml 字段；
            // 注意，这里是添加，在 string.xml 不能有这个字段，会重名！！！
//            resValue ("string", "avis", "官方安飞士租车")
//            resValue "bool", "isrRank", 'false'
            // 动态修改 常量 字段
//            buildConfigField "String", "CHANNEL_VALUE", '"AVIS_OW_1_AND330"'
            // 修改 AndroidManifest.xml 里渠道变量
//            manifestPlaceholders = [CHANNEL_VALUE: "AVIS_OW_1_AND330"]
            buildConfigField "String", "SERVER_HOST", "\"100.100.100.10/\""
            resValue("string", "avis", "安飞士租车")
            resValue("string", "appid", "com.aliyun.sls")
            manifestPlaceholders = [CHANNEL_VALUE: "AVIS_OW_1_AND330", app_icon: "@mipmap/icon_alipay"]

        }
        AVIS_XM_1_AND330 {
            buildConfigField "String", "SERVER_HOST", "\"100.100.100.10/\""
            resValue("string", "avis", "安飞士租车")
            resValue("string", "appid", "com.aliyun.sls.xm")
            manifestPlaceholders = [CHANNEL_VALUE: "AVIS_XM_1_AND330", app_icon: "@mipmap/relese_icon"]
        }
//        AVIS_VIVO_1_AND330 {}
//        AVIS_OPPO_1_AND330 {}
//        AVIS_MZ_1_AND330 {}
//        AVIS_SX_1_AND330 {}
//        AVIS_360SJZS_1_AND330 {}
//        AVIS_BDSJZS_1_AND330 {}
//        AVIS_HW_1_AND330 {}
//        AVIS_QQLLQ_1_AND330 {}
//        AVIS_YYB_1_AND330 {}
//        AVIS_AL_1_AND330 {}
//        AVIS_LX_1_AND330 {}
//        AVIS_SG_1_AND330 {}
//        AVIS_LS_1_AND330 {}
//        AVIS_LT_1_AND330 {}
//        AVIS_CZ_1_AND330 {}
//
//        AVIS_AD_YYB_1_AND330 {}
//        AVIS_AD_YYB_2_AND330 {}
//        AVIS_AD_YYB_3_AND330 {}
//
//        AVIS_JRTT_1_AND330 {}
//        AVIS_JRTT_2_AND330 {}
//        AVIS_JRTT_3_AND330 {}
//        AVIS_JRTT_4_AND330 {}
//        AVIS_JRTT_5_AND330 {}
//        AVIS_JRTT_6_AND330 {}
//        AVIS_JRTT_7_AND330 {}
//        AVIS_JRTT_8_AND330 {}
//        AVIS_JRTT_9_AND330 {}
//        AVIS_JRTT_10_AND330 {}
//
//        AVIS_UCTT_1_AND330 {}
//        AVIS_UCTT_2_AND330 {}
//        AVIS_UCTT_3_AND330 {}
//        AVIS_UCTT_4_AND330 {}
//        AVIS_UCTT_5_AND330 {}
//        AVIS_UCTT_6_AND330 {}
//        AVIS_UCTT_7_AND330 {}
//        AVIS_UCTT_8_AND330 {}
//        AVIS_UCTT_9_AND330 {}
//        AVIS_UCTT_10_AND330 {}
//
//        AVIS_DC_1_AND330 {}
//        AVIS_DC_2_AND330 {}
//        AVIS_DC_3_AND330 {}
//        AVIS_DC_4_AND330 {}
//        AVIS_DC_5_AND330 {}
//        AVIS_DC_6_AND330 {}
//
//        AVIS_SM_1_AND330 {}

    }
//    productFlavors.all {
//        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
//    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(output.outputFile.name, variant.productFlavors[0].name + ".apk"))
        }
    }
    lintOptions {
        abortOnError false
    }
}
kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    annotationProcessor "com.android.databinding:compiler:2.3.3"
    compile project(':aliyun-sls-android-sdk')
    compile project(':common')
}
repositories {
    mavenCentral()
}
